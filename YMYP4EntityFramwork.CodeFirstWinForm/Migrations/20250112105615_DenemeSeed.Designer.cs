// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YMYP4EntityFramwork.CodeFirstWinForm.DAL;

#nullable disable

namespace YMYP4EntityFramwork.CodeFirstWinForm.Migrations
{
    [DbContext(typeof(CodeFirstDbContext))]
    [Migration("20250112105615_DenemeSeed")]
    partial class DenemeSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bilgisayar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cep Telefonu"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Televizyon"
                        });
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Deneme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Denemes");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Core I7 9900 16Gb ram 8Gb Ekran Kartı",
                            Name = "Toshiba Laptop",
                            Price = 15000m,
                            Stock = 11
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Core I5 9800 16Gb ram 4Gb Ekran Kartı",
                            Name = "HP Laptop",
                            Price = 13000m,
                            Stock = 14
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Core I3 9900 8Gb ram 8Gb Ekran Kartı",
                            Name = "Casper Desktop",
                            Price = 10000m,
                            Stock = 7
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Core I5 9000 8Gb ram 8Gb Ekran Kartı",
                            Name = "Lenovo Desktop",
                            Price = 13000m,
                            Stock = 9
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "256Gb Hafıza",
                            Name = "IPhone 15",
                            Price = 15000m,
                            Stock = 17
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "512Gb Hafıza",
                            Name = "Samsung S20",
                            Price = 14000m,
                            Stock = 19
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "55\"",
                            Name = "LG Televizyon",
                            Price = 12500m,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Order", b =>
                {
                    b.HasOne("YMYP4EntityFramwork.CodeFirstWinForm.DAL.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Product", b =>
                {
                    b.HasOne("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.ProductFeature", b =>
                {
                    b.HasOne("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("YMYP4EntityFramwork.CodeFirstWinForm.DAL.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();
                });

            modelBuilder.Entity("YMYP4EntityFramwork.CodeFirstWinForm.DAL.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
